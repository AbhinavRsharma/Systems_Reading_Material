# fibonacci.s
#
# Author: Mainak Chaudhuri
#

	.data
errmsg: .asciiz "Not a valid input. Input must be positive.\n"
msg:    .asciiz ", "
endmsg: .asciiz "\n"

        .text
fibonacci: slti $t0, $a0, 3          # if (n < 3) return 1;
           beq  $t0, $0, recursion
           addi $v0, $0, 1
           jr   $ra
recursion: addi $sp, $sp, -12        # else return fibonacci (n-1) + fibonacci (n-2);
           sw   $a0, 8($sp)
           sw   $ra  4($sp)
           addi $a0, $a0, -1
           jal  fibonacci
           sw   $v0, 0($sp)          # save return value of fibonacci (n-1)
           lw   $a0, 8($sp)
           addi $a0, $a0, -2
           jal  fibonacci
           lw   $ra, 4($sp)
           lw   $t0, 0($sp)
           add  $v0, $v0, $t0
           addi $sp, $sp, 12
           jr   $ra

        .globl main
main:   li   $v0, 5                   # syscall 5 (read_int)
        syscall
        slti $t0, $v0, 1              # if (n < 1) print errmsg
        beq  $t0, $0, loop
        li   $v0, 4                   # syscall 4 (print_string)
        la   $a0, errmsg
        syscall
        jr   $ra
loop:   addi $sp, $sp, -4
        sw   $ra, 0($sp)              # save $ra
        add  $t2, $v0, $0             # save $v0 i.e., n in $t2
        addi $a0, $0, 1
        jal  fibonacci                # fibonacci (1)
        add  $a0, $v0, $0
        li   $v0, 1                   # syscall 1 (print_int)
        syscall
        slti $t0, $t2, 2              # if (n < 2) done
        beq  $t0, $0, loop1
        li   $v0, 4
        la   $a0, endmsg
        syscall
        lw   $ra, 0($sp)              # restore $ra
        addi $sp, $sp, 4
        jr   $ra
loop1:  addi $t3, $0, 2               # $t3 will be used to hold i
loop2:  li   $v0, 4
        la   $a0, msg                 # print comma
        syscall
        add  $a0, $t3, $0
        jal  fibonacci                # fibonacci (i)
        add  $a0, $v0, $0
        li   $v0, 1
        syscall
        addi $t3, $t3, 1              # i++
        slt  $t1, $t2, $t3            # if (n < i) done
        beq  $t1, $0, loop2
        li   $v0, 4
        la   $a0, endmsg
        syscall
        lw   $ra, 0($sp)
        addi $sp, $sp, 4
        jr   $ra
